Index: silkroad2/src/main/java/com/iset/silkroad2/controller/ReponseController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.iset.silkroad2.controller;\r\n\r\nimport com.iset.silkroad2.entities.Personne;\r\nimport com.iset.silkroad2.entities.Question;\r\nimport com.iset.silkroad2.entities.Reponse;\r\nimport com.iset.silkroad2.repository.PersonneRepository;\r\nimport com.iset.silkroad2.repository.QuestionRepository;\r\nimport com.iset.silkroad2.repository.ReponseRepository;\r\nimport jakarta.persistence.Column;\r\nimport jakarta.transaction.Transactional;\r\nimport org.springframework.beans.factory.annotation.*;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\n\r\nimport java.security.Principal;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\n@Controller\r\n@RequestMapping(\"/reponse\")\r\npublic class ReponseController {\r\n\r\n    @Autowired\r\n    ReponseRepository reponseRepository;\r\n    @Autowired\r\n    PersonneRepository personnerepository;\r\n    @Autowired\r\n    QuestionRepository questionrepository;\r\n\r\n    @GetMapping(\"\")\r\n    public List<Reponse> getallreponse(){\r\n        return reponseRepository.findAll();\r\n    }\r\n\r\n//    @GetMapping(\"/{id}\")\r\n//    public Reponse getreponsebyid(@PathVariable long id){\r\n//\r\n//        return reponseRepository.findById(id);\r\n//    }\r\n\r\n    @GetMapping(\"/{id}\")\r\n    public String getQuestionById(@PathVariable Long id, Model model) {\r\n        Question question = questionrepository.findById(id);\r\n\r\n        List<Reponse> reponse = question.getReponse();\r\n\r\n        model.addAttribute(\"question\", question);\r\n        model.addAttribute(\"answers\", reponse);\r\n        model.addAttribute(\"reponse\", new Reponse());\r\n\r\n        return \"reponse/reponse\";\r\n    }\r\n\r\n//    editer\r\n@GetMapping(\"/reponse/{id}/edit\")\r\npublic String showEditResponseForm(@PathVariable Long id, Model model) {\r\n    Reponse reponse = reponseRepository.findById(id);\r\n    String questionTitre = reponse.getQuestion().getTitreq();\r\n    model.addAttribute(\"reponse\", reponse);\r\n    model.addAttribute(\"questionTitre\", questionTitre);\r\n    return \"reponse/edit_reponse\";\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    @PostMapping(\"/{questionId}/addanswer\")\r\n    public ResponseEntity<Reponse> addAnswerToQuestion(@PathVariable Long questionId, @RequestBody Reponse reponse, Principal principal) {\r\n        Optional<Question> optionalQuestion = Optional.ofNullable(questionrepository.findById(questionId));\r\n        if (optionalQuestion.isPresent()) {\r\n            Question question = optionalQuestion.get();\r\n            String username =principal.getName();\r\n            Personne personne=personnerepository.findByNom(username);\r\n            reponse.setPersonne(personne);\r\n            reponse.setQuestion(question);\r\n            reponse.setCreatedat(new Date());\r\n            Reponse savedAnswer = reponseRepository.save(reponse);\r\n            return ResponseEntity.ok(savedAnswer);\r\n        } else {\r\n            return ResponseEntity.notFound().build();\r\n        }\r\n    }\r\n//9bal mane5dem el user\r\n\r\n\r\n    @PutMapping(\"/modifier/{questionid}\")\r\n    public String addAnswerContentOnly(@PathVariable Long questionId, @ModelAttribute(\"reponse\") Reponse reponse) {\r\n        Optional<Question> optionalQuestion = Optional.ofNullable(questionrepository.findById(questionId));\r\n        if (optionalQuestion.isPresent()) {\r\n            Question question = optionalQuestion.get();\r\n            Reponse existingReponse = reponseRepository.findById(reponse.getId());\r\n            existingReponse.setQuestion(question);\r\n            existingReponse.setContenua(reponse.getContenua());\r\n            existingReponse.setCreatedat(new Date());\r\n            Reponse savedAnswer = reponseRepository.save(existingReponse);\r\n            // Redirect to the template\r\n            return \"redirect:/question/index\";\r\n        } else {\r\n            // Handle not found case\r\n            return \"error\";\r\n        }\r\n}\r\n\r\n    @PutMapping(\"/modify/{id}\")\r\n    public String updateResponse(@PathVariable Long id, @ModelAttribute(\"reponse\") Reponse updatedResponse) {\r\n        Reponse existingResponse = reponseRepository.findById(id);\r\n        existingResponse.setContenua(updatedResponse.getContenua());\r\n        reponseRepository.save(existingResponse);\r\n        return \"redirect:/question/index\";\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n//\r\n\r\n\r\n\r\n\r\n    @PostMapping(\"/add\")\r\n    public Reponse addreponse(@RequestBody Reponse reponse){\r\n        return reponseRepository.save(reponse);\r\n    }\r\n\r\n    @PutMapping(\"/modifier/{id}\")\r\n    public Reponse modifierreponse(@RequestBody Reponse reponse,@PathVariable Long id){\r\n        Reponse reponse1=reponseRepository.findById(id);\r\n        reponse1.setContenua(reponse.getContenua());\r\n\r\n        return reponseRepository.save(reponse1);\r\n    }\r\n\r\n    @DeleteMapping(\"/{id}\")\r\n    @Transactional\r\n    public void deletereponse(@PathVariable Long id){\r\n        reponseRepository.deleteById(id);\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/silkroad2/src/main/java/com/iset/silkroad2/controller/ReponseController.java b/silkroad2/src/main/java/com/iset/silkroad2/controller/ReponseController.java
--- a/silkroad2/src/main/java/com/iset/silkroad2/controller/ReponseController.java	(revision dd09872337522bd49816451fbc976bb128787cbc)
+++ b/silkroad2/src/main/java/com/iset/silkroad2/controller/ReponseController.java	(date 1715865453586)
@@ -115,14 +115,6 @@
     }
 
 
-
-
-
-//
-
-
-
-
     @PostMapping("/add")
     public Reponse addreponse(@RequestBody Reponse reponse){
         return reponseRepository.save(reponse);
Index: silkroad2/src/main/java/com/iset/silkroad2/controller/QuestionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.iset.silkroad2.controller;\r\n\r\n\r\nimport com.iset.silkroad2.entities.Personne;\r\nimport com.iset.silkroad2.entities.Question;\r\nimport com.iset.silkroad2.entities.Reponse;\r\nimport com.iset.silkroad2.entities.Tags;\r\nimport com.iset.silkroad2.repository.PersonneRepository;\r\nimport com.iset.silkroad2.repository.QuestionRepository;\r\nimport com.iset.silkroad2.repository.ReponseRepository;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.data.crossstore.ChangeSetPersister;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport jakarta.transaction.Transactional;\r\n\r\n\r\nimport javax.swing.*;\r\nimport java.security.Principal;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Optional;\r\n\r\n\r\n@Controller\r\n@RequestMapping(\"/question\")\r\npublic class QuestionController {\r\n    @Autowired\r\n    QuestionRepository questionRepository;\r\n\r\n    @Autowired\r\n    ReponseRepository  reponseRepository; // Corrected the variable name\r\n    @Autowired\r\n    PersonneRepository personneRepository; // Corrected the variable name\r\n\r\n    @GetMapping(\"/ask\")\r\n    public String showAskQuestionForm(Model model, @RequestParam(name = \"tag\", required = false, defaultValue = \"Restorant\") Tags tag) {\r\n        List<Question> questions = questionRepository.findAll();//\r\n        model.addAttribute(\"question\", new Question());\r\n        model.addAttribute(\"tags\", Tags.values());\r\n\r\n        model.addAttribute(\"questions\", questions);//\r\n\r\n        return \"Question/question\";\r\n    }\r\n\r\n\r\n    @GetMapping(\"/question/{id}/edit\")\r\n    public String showEditQuestionForm(@PathVariable Long id, Model model) {\r\n        Question question = questionRepository.findById(id);\r\n        List<Question> questions = questionRepository.findAll();//\r\n        model.addAttribute(\"question\", question);\r\n        model.addAttribute(\"tags\", Tags.values());\r\n\r\n        model.addAttribute(\"questions\", questions);//\r\n\r\n        return \"Question/edit_question\";\r\n    }\r\n        @GetMapping(\"/all\")\r\n    public List<Question> getAllQuestions(){\r\n        return questionRepository.findAll();\r\n    }\r\n\r\n    @GetMapping(\"/index\")\r\n    public String showIndex(){\r\n        return \"header,footer/header\";\r\n    }\r\n\r\n\r\n\r\n    @PostMapping(\"/add\")\r\n    public String addQuestion(@ModelAttribute Question question, Principal principal) {\r\n        // Get the current authenticated user's ID\r\n        String username = principal.getName();\r\n        Personne personne = personneRepository.findByNom(username);\r\n        Long userId = personne.getId();\r\n\r\n        question.getPersonne().setId(userId);\r\n        question.setCreatedatQ(new Date());\r\n\r\n        questionRepository.save(question);\r\n        return \"redirect:/index\";\r\n    }\r\n\r\n    @PostMapping(\"/hi\")\r\n    public String addQuestionn(@ModelAttribute(\"question\") Question question) {\r\n        question.setCreatedatQ(new Date());\r\n        questionRepository.save(question);\r\n        return \"redirect:/question/index\";\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @GetMapping(\"/{id}\")\r\n    public Question getQuestionById(@PathVariable Long id) {\r\n        return questionRepository.findById(id);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    @DeleteMapping(\"/{id}\")\r\n    @Transactional\r\n    public void deleteQuestion(@PathVariable Long id) throws NotFoundException {\r\n        Optional<Question> optionalQuestion = Optional.ofNullable(questionRepository.findById(id));\r\n        if (optionalQuestion.isPresent()) {\r\n            Question question = optionalQuestion.get();\r\n            // Delete related responses\r\n            List<Reponse> responses = reponseRepository.findByQuestion(question);\r\n            reponseRepository.deleteAll(responses);\r\n            // Delete the question\r\n            questionRepository.deleteById(id);\r\n        } else {\r\n            throw new NotFoundException(\"Question not found\");\r\n        }\r\n    }\r\n\r\n    @PutMapping(\"/modifier/{id}\")\r\n    public String modiferquestion(@PathVariable Long id, @ModelAttribute(\"question\") Question question) {\r\n        Question question1 = questionRepository.findById(id);\r\n        if (question1 != null) {\r\n            question1.setTitreq(question.getTitreq());\r\n            question1.setContenuq(question.getContenuq());\r\n            questionRepository.save(question1);\r\n            return \"redirect:/question/index\";\r\n        } else {\r\n            // Handle the case where the question with the given ID is not found\r\n            return \"redirect:/error\";\r\n        }\r\n    }\r\n\r\n    @PutMapping(\"/modify/{id}\")\r\n    public ResponseEntity<Question> modifyQuestion(@RequestBody Question question, @PathVariable Long id) {\r\n        Optional<Question> optionalQuestion = Optional.ofNullable(questionRepository.findById(id));\r\n        if (optionalQuestion.isPresent()) {\r\n            Question existingQuestion = optionalQuestion.get();\r\n            existingQuestion.setTitreq(question.getTitreq());\r\n            existingQuestion.setContenuq(question.getContenuq());\r\n            Question updatedQuestion = questionRepository.save(existingQuestion);\r\n            return ResponseEntity.ok(updatedQuestion);\r\n        } else {\r\n            return ResponseEntity.notFound().build();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @GetMapping(\"/questions/search\")\r\n    public String searchByTitle(@RequestParam String titreq, Model model) {\r\n        List<Question> questions = questionRepository.findByTitreqContaining(titreq);\r\n        model.addAttribute(\"questions\", questions);\r\n        return \"home/home\"; // Assuming this is the name of your Thymeleaf template\r\n    }\r\n\r\n\r\n\r\n    @GetMapping(\"/questions\")\r\n    public String list(Model model) {\r\n        List<Question> questions = questionRepository.findAll(); // Implement this method in your service\r\n        model.addAttribute(\"questions\", questions);\r\n        return \"home/home\";\r\n    }\r\n\r\n\r\n\r\n    //    signaler\r\n    @PostMapping(\"/signal/{questionId}\")\r\n    public ResponseEntity<?> signalQuestion(@PathVariable Long questionId) {\r\n        Optional<Question> optionalQuestion = Optional.ofNullable(questionRepository.findById(questionId));\r\n        if (optionalQuestion.isPresent()) {\r\n            Question question = optionalQuestion.get();\r\n            question.setReported(true);\r\n            questionRepository.save(question);\r\n            return ResponseEntity.ok(question);\r\n        } else {\r\n            return ResponseEntity.notFound().build();\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/silkroad2/src/main/java/com/iset/silkroad2/controller/QuestionController.java b/silkroad2/src/main/java/com/iset/silkroad2/controller/QuestionController.java
--- a/silkroad2/src/main/java/com/iset/silkroad2/controller/QuestionController.java	(revision dd09872337522bd49816451fbc976bb128787cbc)
+++ b/silkroad2/src/main/java/com/iset/silkroad2/controller/QuestionController.java	(date 1715865279612)
@@ -191,6 +191,24 @@
         }
     }
 
+    @PutMapping("/{id}/like")
+    public ResponseEntity<Question> likeQuestion(@PathVariable Long id, @RequestBody Map<String, Boolean> payload) {
+        Optional<Question> optionalQuestion = Optional.ofNullable(questionRepository.findById(id));
+        if (!optionalQuestion.isPresent()) {
+            return ResponseEntity.notFound().build();
+        }
+
+        Question question = optionalQuestion.get();
+        if (payload.get("increment")) {
+            question.setJaime(question.getJaime() + 1);
+        } else {
+            question.setDislike(question.getDislike() + 1);
+        }
+
+        questionRepository.save(question);
+        return ResponseEntity.ok(question);
+    }
+
 
 }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"789c1bed-682f-4a10-8e7d-d1e5f5440891\" name=\"Changes\" comment=\"i did the header and the footer('who can fix the header and the footer so i can call them in the other file &lt;th:fragment and th:replace won't work &gt;')&#10;and i did the page add question,delete question ,edit question&#10;add answer,delete answer ,adit answer\">\r\n      <change afterPath=\"$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/controller/NotFoundException.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/static/css/home.css\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/static/js/like/dislike.js\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/templates/home/home.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/controller/QuestionController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/controller/QuestionController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/repository/QuestionRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/repository/QuestionRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/repository/ReponseRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/repository/ReponseRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/resources/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/application.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/resources/css/header.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/static/css/header.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/resources/img/1.jpg\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/static/imgs/1.jpg\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/resources/templates/Question/edit_question.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/templates/Question/edit_question.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/resources/templates/Question/footer.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/static/css/footer.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/resources/templates/Question/question.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/templates/Question/question.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/resources/templates/reponse/edit_reponse.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/templates/reponse/edit_reponse.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/resources/templates/reponse/reponse.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/static/css/reponse.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/silkroad2/src/main/resources/templates/reponse/reponse.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/silkroad2/src/main/resources/templates/reponse/reponse.html\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeStyleSettingsInfer\">\r\n    <option name=\"done\" value=\"true\" />\r\n  </component>\r\n  <component name=\"CompilerWorkspaceConfiguration\">\r\n    <option name=\"MAKE_PROJECT_ON_SAVE\" value=\"true\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"HTML File\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/Silkroad2Application.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"QODANA_PROBLEMS_VIEW_TAB\" />\r\n  </component>\r\n  <component name=\"ProjectCodeStyleSettingsMigration\">\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2fUxOsEcZvxJmhkMk51i6eTwLiR\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;Application.Silkroad2Application.executor&quot;: &quot;Run&quot;,\r\n    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;ToolWindowRun.ShowToolbar&quot;: &quot;false&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/banno/Downloads/js-liveEdit-223.8214.16.zip&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"com.iset.silkroad2.controller\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\silkroadproject\\silkroad2\\src\\main\\java\\com\\iset\\silkroad2\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\silkroadproject\\silkroad2\\src\\main\\resources\\static\\imgs\" />\r\n      <recent name=\"C:\\silkroadproject\\silkroad2\\src\\main\\resources\\static\\\" />\r\n      <recent name=\"C:\\silkroadproject\\silkroad2\\src\\main\\resources\\static\" />\r\n      <recent name=\"C:\\silkroadproject\\silkroad2\\src\\main\\resources\\css\" />\r\n      <recent name=\"C:\\silkroadproject\\silkroad2\\src\\main\\resources\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"com.iset.silkroad2.entity\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunAnythingCache\">\r\n    <option name=\"myCommands\">\r\n      <command value=\"jpaRepository\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Silkroad2Application\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.iset.silkroad2.Silkroad2Application\" />\r\n      <module name=\"silkroad2\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.iset.silkroad2.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"789c1bed-682f-4a10-8e7d-d1e5f5440891\" name=\"Changes\" comment=\"\" />\r\n      <created>1713869428829</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1713869428829</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"i did the header and the footer('who can fix the header and the footer so i can call them in the other file &lt;th:fragment and th:replace won't work &gt;')\">\r\n      <created>1714817275092</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714817275092</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"i did the header and the footer('who can fix the header and the footer so i can call them in the other file &lt;th:fragment and th:replace won't work &gt;')\" />\r\n    <MESSAGE value=\"i did the header and the footer('who can fix the header and the footer so i can call them in the other file &lt;th:fragment and th:replace won't work &gt;')&#10;and i did the page add question,delete question ,edit question&#10;add answer,delete answer ,adit answer\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"i did the header and the footer('who can fix the header and the footer so i can call them in the other file &lt;th:fragment and th:replace won't work &gt;')&#10;and i did the page add question,delete question ,edit question&#10;add answer,delete answer ,adit answer\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/silkroadproject$Silkroad2Application.ic\" NAME=\"Silkroad2Application Coverage Results\" MODIFIED=\"1715259569421\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>com.iset.silkroad2.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision dd09872337522bd49816451fbc976bb128787cbc)
+++ b/.idea/workspace.xml	(date 1715865813549)
@@ -4,33 +4,15 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="789c1bed-682f-4a10-8e7d-d1e5f5440891" name="Changes" comment="i did the header and the footer('who can fix the header and the footer so i can call them in the other file &lt;th:fragment and th:replace won't work &gt;')&#10;and i did the page add question,delete question ,edit question&#10;add answer,delete answer ,adit answer">
-      <change afterPath="$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/controller/NotFoundException.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/static/css/home.css" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/static/js/like/dislike.js" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/templates/home/home.html" afterDir="false" />
+    <list default="true" id="789c1bed-682f-4a10-8e7d-d1e5f5440891" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/pom.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/controller/QuestionController.java" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/controller/QuestionController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/repository/QuestionRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/repository/QuestionRepository.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/repository/ReponseRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/repository/ReponseRepository.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/application.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/resources/css/header.css" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/static/css/header.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/resources/img/1.jpg" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/static/imgs/1.jpg" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/resources/templates/Question/edit_question.html" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/templates/Question/edit_question.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/resources/templates/Question/footer.css" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/static/css/footer.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/resources/templates/Question/question.html" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/templates/Question/question.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/resources/templates/reponse/edit_reponse.html" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/templates/reponse/edit_reponse.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/resources/templates/reponse/reponse.css" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/static/css/reponse.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/resources/templates/reponse/reponse.html" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/resources/templates/reponse/reponse.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/controller/ReponseController.java" beforeDir="false" afterPath="$PROJECT_DIR$/silkroad2/src/main/java/com/iset/silkroad2/controller/ReponseController.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
-  </component>
-  <component name="CodeStyleSettingsInfer">
-    <option name="done" value="true" />
   </component>
   <component name="CompilerWorkspaceConfiguration">
     <option name="MAKE_PROJECT_ON_SAVE" value="true" />
@@ -40,8 +22,8 @@
       <list>
         <option value="Interface" />
         <option value="Enum" />
+        <option value="Class" />
         <option value="HTML File" />
-        <option value="Class" />
       </list>
     </option>
   </component>
@@ -61,9 +43,6 @@
   <component name="ProblemsViewState">
     <option name="selectedTabId" value="QODANA_PROBLEMS_VIEW_TAB" />
   </component>
-  <component name="ProjectCodeStyleSettingsMigration">
-    <option name="version" value="2" />
-  </component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 8
 }</component>
@@ -86,26 +65,23 @@
     &quot;ToolWindowRun.ShowToolbar&quot;: &quot;false&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/banno/Downloads/js-liveEdit-223.8214.16.zip&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/banno/Desktop/GestionBanque-master - Copie bennouri haider&quot;,
     &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
     &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
     &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;
+    &quot;settings.editor.selected.configurable&quot;: &quot;advanced.settings&quot;
   }
 }</component>
   <component name="RecentsManager">
-    <key name="CreateClassDialog.RecentsKey">
-      <recent name="com.iset.silkroad2.controller" />
-    </key>
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\silkroadproject\silkroad2\src\main\java\com\iset\silkroad2" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
-      <recent name="C:\silkroadproject\silkroad2\src\main\resources\static\imgs" />
-      <recent name="C:\silkroadproject\silkroad2\src\main\resources\static\" />
-      <recent name="C:\silkroadproject\silkroad2\src\main\resources\static" />
-      <recent name="C:\silkroadproject\silkroad2\src\main\resources\css" />
+      <recent name="C:\silkroadproject\silkroad2\src\main\resources\templates" />
+      <recent name="C:\silkroadproject\silkroad2\src\main\resources\templates\header,footer" />
       <recent name="C:\silkroadproject\silkroad2\src\main\resources" />
+      <recent name="C:\silkroadproject\silkroad2\src\main\resources\static\imga\css\img" />
+      <recent name="C:\silkroadproject\silkroad2\src\main\resources\static\imga\css" />
     </key>
     <key name="CopyClassDialog.RECENTS_KEY">
       <recent name="com.iset.silkroad2.entity" />
@@ -117,7 +93,7 @@
     </option>
   </component>
   <component name="RunManager">
-    <configuration name="Silkroad2Application" type="Application" factoryName="Application" nameIsGenerated="true">
+    <configuration name="Silkroad2Application" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.iset.silkroad2.Silkroad2Application" />
       <module name="silkroad2" />
       <extension name="coverage">
@@ -130,6 +106,11 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.Silkroad2Application" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SharedIndexes">
     <attachedChunks>
@@ -147,25 +128,10 @@
       <option name="presentableId" value="Default" />
       <updated>1713869428829</updated>
     </task>
-    <task id="LOCAL-00001" summary="i did the header and the footer('who can fix the header and the footer so i can call them in the other file &lt;th:fragment and th:replace won't work &gt;')">
-      <created>1714817275092</created>
-      <option name="number" value="00001" />
-      <option name="presentableId" value="LOCAL-00001" />
-      <option name="project" value="LOCAL" />
-      <updated>1714817275092</updated>
-    </task>
-    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
-    <MESSAGE value="i did the header and the footer('who can fix the header and the footer so i can call them in the other file &lt;th:fragment and th:replace won't work &gt;')" />
-    <MESSAGE value="i did the header and the footer('who can fix the header and the footer so i can call them in the other file &lt;th:fragment and th:replace won't work &gt;')&#10;and i did the page add question,delete question ,edit question&#10;add answer,delete answer ,adit answer" />
-    <option name="LAST_COMMIT_MESSAGE" value="i did the header and the footer('who can fix the header and the footer so i can call them in the other file &lt;th:fragment and th:replace won't work &gt;')&#10;and i did the page add question,delete question ,edit question&#10;add answer,delete answer ,adit answer" />
-  </component>
-  <component name="XSLT-Support.FileAssociations.UIState">
-    <expand />
-    <select />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/silkroadproject$Silkroad2Application.ic" NAME="Silkroad2Application Coverage Results" MODIFIED="1715259569421" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
